include "application.conf"

play.http.secret.key = "unused secret"

http {
  address = ${?HTTP_BIND_ADDRESS}
  port = 9000
}

play.filters.hosts {
  # Requests that are not from one of these hosts will be rejected.
  allowed = [${?ALLOWED_HOST}]
}

akka.discovery {
  method = kubernetes-api

  kubernetes-api {
    pod-namespace = "default"

    pod-label-selector = "app=menu-item"

    pod-port-name = "akka-mgmt-http"
  }

}

cassandra.default {
  ## list the contact points  here
  contact-points = [${?CASSANDRA_CONTACT_POINT}]
  ## override Lagomâ€™s ServiceLocator-based ConfigSessionProvider
  session-provider = akka.persistence.cassandra.ConfigSessionProvider
}

cassandra-journal {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

cassandra-snapshot-store {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

lagom.persistence.read-side.cassandra {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

lagom.broker.kafka {
  # If this is an empty string, then the Lagom service locator lookup will not be done,
  # and the brokers configuration will be used instead.
  service-name = ""

  # The URLs of the Kafka brokers. Separate each URL with a comma.
  # This will be ignored if the service-name configuration is non empty.
  brokers = ${?KAFKA_BROKERS_SERVICE_URL}

}

akka.management.cluster.bootstrap.contact-point-discovery.port-name = "akka-mgmt-http"

#Wait until there are 3 contact points present before attempting initial cluster formation
akka.management.cluster.bootstrap.contact-point-discovery.required-contact-point-nr = 3

#Shutdown if we have not joined a cluster after one minute.
akka.cluster.shutdown-after-unsuccessful-join-seed-nodes = 300s

# Telemetry
cinnamon.lagom.http.servers {
  "*:*" {
    paths {
      "*" {
        metrics = on
      }
    }
  }
}