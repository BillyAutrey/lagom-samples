include "application.conf"

play.http.secret.key = "unused secret"

http {
  address = ${?HTTP_BIND_ADDRESS}
  port = 9000
}

play.filters.hosts {
  # Requests that are not from one of these hosts will be rejected.
  allowed = [${?ALLOWED_HOST}]
}
akka.discovery.method = kubernetes-api

akka.management.cluster.bootstrap {
  contact-point-discovery {
    discovery-method = kubernetes-api
    service-name = "menu-item"
    port-name = "akka-mgmt-http"
    #Wait until there are 3 contact points present before attempting initial cluster formation
    required-contact-point-nr = 3
  }
}

cassandra.default {
  ## list the contact points  here
  contact-points = [${?CASSANDRA_CONTACT_POINT}]
  ## override Lagomâ€™s ServiceLocator-based ConfigSessionProvider
  session-provider = akka.persistence.cassandra.ConfigSessionProvider
}

cassandra-journal {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

cassandra-snapshot-store {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

lagom.persistence.read-side.cassandra {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

lagom.broker.kafka {
  # If this is an empty string, then the Lagom service locator lookup will not be done,
  # and the brokers configuration will be used instead.
  service-name = ""

  # The URLs of the Kafka brokers. Separate each URL with a comma.
  # This will be ignored if the service-name configuration is non empty.
  brokers = ${?KAFKA_BROKERS_SERVICE_URL}

}

#Shutdown if we have not joined a cluster after one minute.
akka.cluster.shutdown-after-unsuccessful-join-seed-nodes = 300s

# Telemetry
# Lagom Cinnamon circuit breaker metrics - https://developer.lightbend.com/docs/telemetry/current/instrumentations/lagom/lagom-configuration.html#circuit-breaker-configuration
lagom.spi.circuit-breaker-metrics-class = "cinnamon.lagom.CircuitBreakerInstrumentation"

# Lagom Telemetry for servers - https://developer.lightbend.com/docs/telemetry/current/instrumentations/lagom/lagom-configuration.html#example-configuration-2
cinnamon.lagom.http.servers {
  "*:*" {
    paths {
      "*" {
        metrics = on
      }
    }
  }
}

# Persistent entity config - https://developer.lightbend.com/docs/telemetry/current/instrumentations/lagom/lagom-configuration.html#lagom-persistent-entities
cinnamon.akka {
  actors {
    "MenuItemEntity-Actors" {
      report-by = group
      includes = ["/system/sharding/MenuItemEntity/*"]
      excludes = ["akka.cluster.sharding.Shard"]
    }
  }
}

# exporting metrics for lightbend console
cinnamon.prometheus {
  exporters += http-server

  http-server {
    host = "0.0.0.0"
    port = 9001
  }
}